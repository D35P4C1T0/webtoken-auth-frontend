{"version":3,"sources":["assets/bg.jpg","Auth.js","containers/Login.js","components/Home.js","components/Contact.js","components/NoMatch.js","components/Layout.js","components/NavigationBar.js","components/Header.js","components/ProtectedRoute.js","containers/Signup.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","require","config","this","authenticated","TOKEN","credentials","cb","content","username","password","process","backend_address","console","log","url","axios","method","data","headers","then","response","token","catch","err","statusText","Login","props","useState","setPassword","setUsername","className","onSubmit","event","preventDefault","auth","login","history","push","FormGroup","controlId","bsSize","FormLabel","FormControl","autoFocus","type","value","onChange","e","target","Button","block","disabled","length","onClick","Home","Contact","NoMatch","Layout","Container","children","Styles","styled","div","NavigationBar","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Item","Link","to","logout","headerImage","Header","fluid","ProtectedRoute","Component","component","rest","render","isAuthenticated","pathname","state","from","location","Signup","email","setEmail","signup","App","Fragment","exact","path","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"+IAAAA,EAAOC,QAAU,IAA0B,gC,+QCE3CC,EAAQ,IAAUC,S,IAmFH,M,WAhFb,aAAe,oBACbC,KAAKC,eAAgB,EACrBD,KAAKE,MAAQ,G,kDAGTC,EAAaC,GAAK,IAAD,OACjBC,EAAU,CACZC,SAAUH,EAAYG,SACtBC,SAAUJ,EAAYI,UAKnBC,mHAAYC,iBACfC,QAAQC,IAAI,sBAGd,IAAIC,EAAMJ,mHAAYC,gBAAkB,UAAYN,EAAYG,SAGhEO,IAAM,CACJC,OAAQ,OACRF,IAAKA,EACLG,KAAMV,EACNN,OAAQ,CAAEiB,QAAS,MAElBC,MAAK,SAAAC,GACJR,QAAQC,IAAI,oBAAqBO,IACG,IAAhCA,EAASH,KAAKd,gBAChBS,QAAQC,IAAIN,EAAQC,SAAU,sCAC9B,EAAKL,eAAgB,EACrB,EAAKC,MAAQgB,EAASH,KAAKI,MAC3Bf,QAIHgB,OAAM,SAAAC,GAAG,OAAIX,QAAQC,IAAI,cAAeU,Q,6BAGtClB,EAAaC,GAAK,IAAD,OAClBC,EAAU,CACZC,SAAUH,EAAYG,SACtBC,SAAUJ,EAAYI,UAKnBC,mHAAYC,iBACfC,QAAQC,IAAI,sBAGd,IAAIC,EAAMJ,mHAAYC,gBAAkB,SAGxCI,IAAM,CACJC,OAAQ,OACRF,IAAKA,EACLG,KAAMV,EACNN,OAAQ,CAAEiB,QAAS,MAElBC,MAAK,SAAAC,GACJR,QAAQC,IAAI,oBAAqBO,GACL,OAAxBA,EAASI,aACX,EAAKrB,eAAgB,EACrBG,QAGHgB,OAAM,SAAAC,GAAG,OAAIX,QAAQC,IAAI,cAAeU,Q,6BAGtCjB,GACLJ,KAAKC,eAAgB,EACrBG,M,wCAIA,OAAOJ,KAAKC,kB,MC5ED,SAASsB,EAAMC,GAAO,MAEHC,mBAAS,IAFN,mBAE5BlB,EAF4B,KAElBmB,EAFkB,OAGHD,mBAAS,IAHN,mBAG5BnB,EAH4B,KAGlBqB,EAHkB,KAiBnC,OACE,yBAAKC,UAAU,SACb,0BAAMC,SAVV,SAAsBC,GACpBA,EAAMC,iBACN,IAAI5B,EAAc,CAAEG,SAAUA,EAAUC,SAAUA,GAClDyB,EAAKC,MAAM9B,GAAa,WACtBqB,EAAMU,QAAQC,KAAK,cAOjB,kBAACC,EAAA,EAAD,CAAWC,UAAU,WAAWC,OAAO,SACrC,kBAACC,EAAA,EAAD,iBACA,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,KAAK,WACLC,MAAOrC,EACPsC,SAAU,SAAAC,GAAC,OAAIlB,EAAYkB,EAAEC,OAAOH,WAYxC,kBAACP,EAAA,EAAD,CAAWC,UAAU,YACnB,kBAACE,EAAA,EAAD,iBACA,kBAACC,EAAA,EAAD,CACEG,MAAOpC,EACPqC,SAAU,SAAAC,GAAC,OAAInB,EAAYmB,EAAEC,OAAOH,QACpCD,KAAK,cAGT,kBAACN,EAAA,EAAD,KACE,kBAACW,EAAA,EAAD,CAAQC,OAAK,EAACC,WAzCb3C,EAAS4C,OAAS,GAAK3C,EAAS2C,OAAS,GAyCDR,KAAK,UAA9C,SAGA,kBAACK,EAAA,EAAD,CACEC,OAAK,EACLG,QAAS,WACP3B,EAAMU,QAAQC,KAAK,aAHvB,cCrDH,IAAMiB,EAAO,kBAClB,6BACE,2CACA,mDAFF,IAE8B,6BAF9B,gOCDWC,EAAU,kBACrB,6BACE,qDADF,iCCDWC,EAAU,kBACrB,6BACE,0C,QCDSC,EAAS,SAAA/B,GAAK,OAAI,kBAACgC,EAAA,EAAD,KAAYhC,EAAMiC,W,2SCGjD,IAAMC,EAASC,IAAOC,IAAV,KAgBCC,EAAgB,kBAC3B,kBAACH,EAAD,KACE,kBAACI,EAAA,EAAD,CAAQC,OAAO,MACb,kBAACD,EAAA,EAAOE,MAAR,CAAcC,KAAK,KAAnB,aACA,kBAACH,EAAA,EAAOI,OAAR,CAAeC,gBAAc,qBAC7B,kBAACL,EAAA,EAAOM,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAK1C,UAAU,WACb,kBAAC0C,EAAA,EAAIC,KAAL,KACE,kBAACD,EAAA,EAAIE,KAAL,KACE,kBAAC,IAAD,CAAMC,GAAG,SAAT,UAGJ,kBAACH,EAAA,EAAIC,KAAL,KACE,kBAACD,EAAA,EAAIE,KAAL,KACE,kBAAC,IAAD,CAAMC,GAAG,YAAT,aAGJ,kBAACH,EAAA,EAAIC,KAAL,KACE,kBAACD,EAAA,EAAIE,KAAL,KACE,kBAAC,IAAD,CACErB,QAAS,WACPnB,EAAK0C,QAAO,gBAEdD,GAAG,KAJL,iB,+bCpCd,IAAMf,EAASC,IAAOC,IAAV,IAEUe,KAoBTC,EAAS,kBACpB,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACjD,UAAU,SACrB,yBAAKA,UAAU,YACf,kBAAC4B,EAAA,EAAD,KACE,uCACA,iEACqC,6BADrC,yB,gBC7BKsB,EAAiB,SAAC,GAAuC,IAA1BC,EAAyB,EAApCC,UAAyBC,EAAW,6BACnE,OACE,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAA1D,GACN,OAAIQ,EAAKmD,kBACA,kBAACJ,EAAcvD,GAGpB,kBAAC,IAAD,CACEiD,GAAI,CACFW,SAAU,IACVC,MAAO,CACLC,KAAM9D,EAAM+D,kB,kBCZf,SAASC,EAAOhE,GAAQ,IAAD,EACVC,mBAAS,IADC,mBAC7BgE,EAD6B,KACtBC,EADsB,OAEJjE,mBAAS,IAFL,mBAE7BnB,EAF6B,KAEnBqB,EAFmB,OAGJF,mBAAS,IAHL,mBAG7BlB,EAH6B,KAGnBmB,EAHmB,KAiBpC,OACE,yBAAKE,UAAU,SACb,0BAAMC,SAVV,SAAsBC,GACpBA,EAAMC,iBACN,IAAI5B,EAAc,CAAEG,SAAUA,EAAUC,SAAUA,GAClDyB,EAAK2D,OAAOxF,GAAa,WACvBqB,EAAMU,QAAQC,KAAK,cAOjB,kBAACC,EAAA,EAAD,CAAWC,UAAU,YACnB,kBAACE,EAAA,EAAD,iBACA,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,KAAK,WACLC,MAAOrC,EACPsC,SAAU,SAAAC,GAAC,OAAIlB,EAAYkB,EAAEC,OAAOH,WAGxC,kBAACP,EAAA,EAAD,CAAWC,UAAU,SACnB,kBAACE,EAAA,EAAD,cACA,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,KAAK,QACLC,MAAO8C,EACP7C,SAAU,SAAAC,GAAC,OAAI6C,EAAS7C,EAAEC,OAAOH,WAGrC,kBAACP,EAAA,EAAD,CAAWC,UAAU,YACnB,kBAACE,EAAA,EAAD,iBACA,kBAACC,EAAA,EAAD,CACEG,MAAOpC,EACPqC,SAAU,SAAAC,GAAC,OAAInB,EAAYmB,EAAEC,OAAOH,QACpCD,KAAK,cAGT,kBAACK,EAAA,EAAD,CAAQC,OAAK,EAACC,WAxCX3C,EAAS4C,OAAS,GAAKuC,EAAMvC,OAAS,GAAK3C,EAAS2C,OAAS,GAwCvBR,KAAK,UAA9C,c,ICdOkD,E,iLApBX,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIf,UAAWzD,IACjC,kBAAC,IAAD,CAAOwE,KAAK,UAAUf,UAAWQ,IACjC,kBAAC,EAAD,CAAgBO,KAAK,QAAQf,UAAW5B,IACxC,kBAAC,IAAD,CAAO2C,KAAK,WAAWf,UAAW3B,IAClC,kBAAC,IAAD,CAAO2B,UAAW1B,Y,GAbdyB,aCHEiB,QACW,cAA7BC,OAAOV,SAASW,UAEe,UAA7BD,OAAOV,SAASW,UAEhBD,OAAOV,SAASW,SAASC,MACvB,2DCZNC,IAASlB,OAAO,kBAAC,EAAD,MAASmB,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxF,MAAK,SAAAyF,GACJA,EAAaC,gBAEdvF,OAAM,SAAAwF,GACLlG,QAAQkG,MAAMA,EAAMC,c","file":"static/js/main.02e46b4c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.72ae97a4.jpg\";","import axios from 'axios'\n\nrequire('dotenv').config()\n\nclass Auth {\n  constructor() {\n    this.authenticated = false\n    this.TOKEN = ''\n  }\n\n  login(credentials, cb) {\n    let content = {\n      username: credentials.username,\n      password: credentials.password\n    }\n\n    // let url = \"http://localhost:3000/users/\" + credentials.username\n\n    if (!process.env.backend_address) {\n      console.log('no backend address')\n    }\n\n    let url = process.env.backend_address + '/users/' + credentials.username\n    // console.log(url)\n\n    axios({\n      method: 'post',\n      url: url,\n      data: content,\n      config: { headers: {} }\n    })\n      .then(response => {\n        console.log('RESPONSE RECEIVED', response)\n        if (response.data.authenticated === true) {\n          console.log(content.username, 'is authenticated and has logged in')\n          this.authenticated = true\n          this.TOKEN = response.data.token\n          cb()\n        }\n      })\n\n      .catch(err => console.log('AXIOS ERROR', err))\n  }\n\n  signup(credentials, cb) {\n    let content = {\n      username: credentials.username,\n      password: credentials.password\n    }\n\n    // let url = 'http://localhost:3000/users'\n\n    if (!process.env.backend_address) {\n      console.log('no backend address')\n    }\n\n    let url = process.env.backend_address + '/users'\n    // console.log(url)\n\n    axios({\n      method: 'post',\n      url: url,\n      data: content,\n      config: { headers: {} }\n    })\n      .then(response => {\n        console.log('RESPONSE RECEIVED', response)\n        if (response.statusText === 'OK') {\n          this.authenticated = true\n          cb()\n        }\n      })\n      .catch(err => console.log('AXIOS ERROR', err))\n  }\n\n  logout(cb) {\n    this.authenticated = false\n    cb()\n  }\n\n  isAuthenticated() {\n    return this.authenticated\n  }\n}\n\nexport default new Auth()\n","import React, { useState } from \"react\"\nimport { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\"\nimport \"./Login.css\"\nimport auth from \"../Auth\"\n\nexport default function Login(props) {\n  //   const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [username, setUsername] = useState(\"\")\n\n  function validateForm() {\n    return username.length > 0 && password.length > 0\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault()\n    let credentials = { username: username, password: password }\n    auth.login(credentials, () => {\n      props.history.push(\"/home\")\n    })\n  }\n\n  return (\n    <div className=\"Login\">\n      <form onSubmit={handleSubmit}>\n        <FormGroup controlId=\"username\" bsSize=\"large\">\n          <FormLabel>Username</FormLabel>\n          <FormControl\n            autoFocus\n            type=\"username\"\n            value={username}\n            onChange={e => setUsername(e.target.value)}\n          />\n        </FormGroup>\n        {/* <FormGroup controlId=\"email\" bsSize=\"large\">\n          <FormLabel>Email</FormLabel>\n          <FormControl\n            autoFocus\n            type=\"email\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          />\n        </FormGroup> */}\n        <FormGroup controlId=\"password\">\n          <FormLabel>Password</FormLabel>\n          <FormControl\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            type=\"password\"\n          />\n        </FormGroup>\n        <FormGroup>\n          <Button block disabled={!validateForm()} type=\"submit\">\n            Login\n          </Button>\n          <Button\n            block\n            onClick={() => {\n              props.history.push(\"/signup\")\n            }}\n          >\n            Sign Up\n          </Button>\n        </FormGroup>\n      </form>\n    </div>\n  )\n}\n","import React from \"react\"\n\nexport const Home = () => (\n  <div>\n    <h2>Hello World</h2>\n    <p>You're authenticated</p> <br></br>\n    Lorem ipsum dolor sit amet consectetur adipisicing elit. Optio vitae eveniet\n    hic facilis est eius suscipit laborum voluptate esse reprehenderit,\n    accusantium id dolorem quia. Corrupti voluptatem totam numquam quam autem?\n  </div>\n)\n","import React from \"react\"\n\nexport const Contact = () => (\n  <div>\n    <h2>It's me, but on React</h2>\n    https://github.com/D35P4C1T0\n  </div>\n)\n","import React from \"react\"\n\nexport const NoMatch = () => (\n  <div>\n    <h2>No Match</h2>\n  </div>\n)\n","import React from \"react\"\nimport Container from \"react-bootstrap/Container\"\n\nexport const Layout = props => <Container>{props.children}</Container>\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { Nav, Navbar } from \"react-bootstrap\"\nimport auth from \"../Auth\"\nimport styled from \"styled-components\"\n\nconst Styles = styled.div`\n  .navbar {\n    background-color: #222;\n  }\n\n  a,\n  .navbar-brand,\n  .navbar-collapse .navbar-nav .nav-link {\n    color: white;\n\n    &:hover {\n      color: black;\n    }\n  }\n`\n\nexport const NavigationBar = () => (\n  <Styles>\n    <Navbar expand=\"lg\">\n      <Navbar.Brand href=\"/\">D35P4C1T0</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"ml-auto\">\n          <Nav.Item>\n            <Nav.Link>\n              <Link to=\"/home\">Home</Link>\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link>\n              <Link to=\"/contact\">Contact</Link>\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link>\n              <Link\n                onClick={() => {\n                  auth.logout(() => {})\n                }}\n                to=\"/\"\n              >\n                Logout\n              </Link>\n            </Nav.Link>\n          </Nav.Item>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  </Styles>\n)\n","import React from \"react\"\nimport { Jumbotron as Jumbo, Container } from \"react-bootstrap\"\nimport styled from \"styled-components\"\nimport headerImage from \"../assets/bg.jpg\"\n\nconst Styles = styled.div`\n  .jumbo {\n    background: url(${headerImage}) no-repeat fixed bottom;\n    background-size: cover;\n    color: #efefef;\n    height: 12em;\n    position: relative;\n    z-index: -2;\n  }\n\n  .overlay {\n    background-color: #000;\n    opacity: 0.75;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    z-index: -1;\n  }\n`\n\nexport const Header = () => (\n  <Styles>\n    <Jumbo fluid className=\"jumbo\">\n      <div className=\"overlay\"></div>\n      <Container>\n        <h1>Welcome</h1>\n        <p>\n          Learn to code by stealing snippets <br></br> and stock images\n        </p>\n      </Container>\n    </Jumbo>\n  </Styles>\n)\n","import React from \"react\"\nimport { Route, Redirect } from \"react-router-dom\"\nimport auth from \"../Auth\"\n\nexport const ProtectedRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (auth.isAuthenticated()) {\n          return <Component {...props} />\n        } else {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/\",\n                state: {\n                  from: props.location\n                }\n              }}\n            />\n          )\n        }\n      }}\n    />\n  )\n}\n","import React, { useState } from \"react\"\nimport { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\"\nimport \"./Login.css\"\nimport auth from \"../Auth\"\n\nexport default function Signup(props) {\n  const [email, setEmail] = useState(\"\")\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n\n  function validateForm() {\n    return username.length > 0 && email.length > 0 && password.length > 0\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault()\n    let credentials = { username: username, password: password }\n    auth.signup(credentials, () => {\n      props.history.push(\"/home\")\n    })\n  }\n\n  return (\n    <div className=\"Login\">\n      <form onSubmit={handleSubmit}>\n        <FormGroup controlId=\"username\">\n          <FormLabel>Username</FormLabel>\n          <FormControl\n            autoFocus\n            type=\"username\"\n            value={username}\n            onChange={e => setUsername(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"email\">\n          <FormLabel>Email</FormLabel>\n          <FormControl\n            autoFocus\n            type=\"email\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"password\">\n          <FormLabel>Password</FormLabel>\n          <FormControl\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            type=\"password\"\n          />\n        </FormGroup>\n        <Button block disabled={!validateForm()} type=\"submit\">\n          Register\n        </Button>\n      </form>\n    </div>\n  )\n}\n","import React, { Component } from \"react\"\nimport Login from \"./containers/Login\"\nimport { Home } from \"./components/Home\"\nimport { Contact } from \"./components/Contact\"\nimport { NoMatch } from \"./components/NoMatch\"\nimport { Layout } from \"./components/Layout\"\nimport { NavigationBar } from \"./components/NavigationBar\"\nimport { Header } from \"./components/Header\"\nimport { ProtectedRoute } from \"./components/ProtectedRoute\"\nimport \"./App.css\"\nimport \"bootstrap-css-only/css/bootstrap.min.css\"\nimport \"mdbreact/dist/css/mdb.css\"\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\nimport Signup from \"./containers/Signup\"\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Router>\n          <NavigationBar />\n          <Header />\n          <Layout>\n            <Switch>\n              <Route exact path=\"/\" component={Login} />\n              <Route path=\"/signup\" component={Signup} />\n              <ProtectedRoute path=\"/home\" component={Home} />\n              <Route path=\"/contact\" component={Contact} />\n              <Route component={NoMatch} />\n            </Switch>\n          </Layout>\n        </Router>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}